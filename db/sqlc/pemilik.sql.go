// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: pemilik.sql

package db

import (
	"context"
	"database/sql"
)

const createPemilik = `-- name: CreatePemilik :one
INSERT INTO pemilik (
    nama,
    ktp,
    jabatan,
    alamat,
    kecamatan,
    kelurahan,
    kabupaten_kota,
    kode_pos,
    telepon,
    created_by,
    updated_by
) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)
    RETURNING id, nama, ktp, jabatan, alamat, kecamatan, kelurahan, kabupaten_kota, kode_pos, telepon, created_at, created_by, updated_at, updated_by, deleted_at, deleted_by
`

type CreatePemilikParams struct {
	Nama          string         `json:"nama"`
	Ktp           string         `json:"ktp"`
	Jabatan       sql.NullString `json:"jabatan"`
	Alamat        sql.NullString `json:"alamat"`
	Kecamatan     sql.NullString `json:"kecamatan"`
	Kelurahan     sql.NullString `json:"kelurahan"`
	KabupatenKota sql.NullString `json:"kabupaten_kota"`
	KodePos       sql.NullString `json:"kode_pos"`
	Telepon       sql.NullString `json:"telepon"`
	CreatedBy     sql.NullInt64  `json:"created_by"`
	UpdatedBy     sql.NullInt64  `json:"updated_by"`
}

func (q *Queries) CreatePemilik(ctx context.Context, arg CreatePemilikParams) (Pemilik, error) {
	row := q.db.QueryRowContext(ctx, createPemilik,
		arg.Nama,
		arg.Ktp,
		arg.Jabatan,
		arg.Alamat,
		arg.Kecamatan,
		arg.Kelurahan,
		arg.KabupatenKota,
		arg.KodePos,
		arg.Telepon,
		arg.CreatedBy,
		arg.UpdatedBy,
	)
	var i Pemilik
	err := row.Scan(
		&i.ID,
		&i.Nama,
		&i.Ktp,
		&i.Jabatan,
		&i.Alamat,
		&i.Kecamatan,
		&i.Kelurahan,
		&i.KabupatenKota,
		&i.KodePos,
		&i.Telepon,
		&i.CreatedAt,
		&i.CreatedBy,
		&i.UpdatedAt,
		&i.UpdatedBy,
		&i.DeletedAt,
		&i.DeletedBy,
	)
	return i, err
}
